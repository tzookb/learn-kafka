version: "3"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka1:
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9091:9091"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://0.0.0.0:9091
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka1:9092,EXTERNAL://192.168.106.2:9091
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL

    depends_on:
      - zookeeper

  kafka2:
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "19092:19092"
    volumes:
      - "kafka_data2:/bitnami"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

      - KAFKA_LISTENERS=INTERNAL://kafka2:9092,EXTERNAL://0.0.0.0:19092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka2:9092,EXTERNAL://192.168.106.2:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
    depends_on:
      - zookeeper
  kowl:
    image: vectorized/console:latest
    ports:
      - "8080:8080"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_BROKERS: "kafka1,kafka2"
      KAFKA_SCHEMAREGISTRY_ENABLED: 'true'
      KAFKA_SCHEMAREGISTRY_URLS: "http://schemareg:8081"
    
  kowl-ui:
    image: quay.io/cloudhut/kowl:latest
    hostname: kowl
    container_name: kowl
    # depends_on:
    #   schema-registry:
    #     condition: service_healthy
    ports:
      - "8081:8080"
    environment:
      KAFKA_BROKERS: 'kafka1,kafka2'
      KAFKA_SCHEMAREGISTRY_ENABLED: 'true'
      KAFKA_SCHEMAREGISTRY_URLS: "http://schemareg:8081"
      # CONNECT_ENABLED: 'true'
      # CONNECT_CLUSTERS_NAME: 'debezium'
      # CONNECT_CLUSTERS_URL: "http://debezium-connector:8083"

  schemareg:
    image: docker.io/bitnami/schema-registry:7.2.3
    ports:
      - "9999:8081"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      SCHEMA_REGISTRY_DEBUG: true
      SCHEMA_REGISTRY_KAFKA_BROKERS: 'PLAINTEXT://kafka1:9092,PLAINTEXT://kafka2:9092'


  # go:
  #   image: golang:alpine
  #   tty: true
  #   volumes:
  #     - "./:/golang"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  kafka_data2:
    driver: local
